version: '3.9'

volumes:
  postgres:
    name: bookstore-postgres
  pgadmin:
    name: bookstore-pgadmin
  keycloak:
    name: bookstore-keycloak
  nginx:
    name: bookstore-nginx
  storage:
    name: bookstore-storage
  mongo:
    name: bookstore-mongo

networks:
  app:
    name: bookstore-network

services:
  nginx:
    image: nginx:1.25.3-alpine
    restart: always
    hostname: nginx-srv
    env_file:
      - ./nginx/.env.nginx
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/ssl/:/etc/nginx/ssl/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - keycloak
      - postgres
      - adminer
    ports:
      - '443:443'
    networks:
      app:

  postgres:
    image: postgres:16.1
    restart: always
    hostname: postgres-srv
    build:
      context: ./postgres
      dockerfile: Dockerfile
    env_file:
      - ./postgres/.env.postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    command:
      - postgres
      - -c
      - config_file=/docker-entrypoint-initdb.d/postgresql.conf
    networks:
      app:

  adminer:
    image: adminer:latest
    restart: always
    hostname: adminer-srv
    env_file:
      - ./adminer/.env.adminer
    volumes:
      - ./adminer/adminer.css:/var/www/html/adminer.css
    command:
      - 'php'
      - '-S'
      - '[::]:9999'
      - '-t'
      - '/var/www/html'
    ports:
      - "9999:9999"
    networks:
      app:

  pgamin:
    image: dpage/pgadmin4:8.1
    restart: always
    hostname: pgadmin-srv
    env_file:
      - ./pgadmin/.env.pgadmin
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      app:

  keycloak:
    image: keycloak/keycloak:23.0.3
    restart: always
    hostname: keycloak-srv
    depends_on:
      postgres:
        condition: service_completed_successfully
    env_file:
      - ./keycloak/.env.keycloak
    volumes:
      - keycloak:/opt/keycloak
      - ./keycloak/ssl/:/etc/x509/https/
      - ./keycloak/realms.json:/opt/keycloak/data/import/realms.json
    command:
      - start
    networks:
      app:

  mongo:
    image: mongo:7.0.4
    restart: always
    hostname: mongo-srv
    env_file:
      - ./mongo/.env.mongo
    volumes:
      - mongo:/data/db
    ports:
      - '27017:27017'
    networks:
      app:

  storage:
    image: minio/minio:RELEASE.2023-12-23T07-19-11Z
    restart: always
    hostname: storage-srv
    env_file:
      - ./minio/.env.minio
    volumes:
      - storage:/data
      - ./minio/ssl:/etc/x509/https
    command:
      - server
      - /data
    networks:
      app:

#  kms:
#    image: minio/kes:2023-11-10T10-44-28Z
#    restart: always
#    hostname: kms-srv
