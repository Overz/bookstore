version: "3.9"

volumes:
  postgres:
    name: bookstore-postgres
  pgadmin:
    name: bookstore-pgadmin
  keycloak:
    name: bookstore-keycloak
  nginx:
    name: bookstore-nginx

networks:
  app:
    name: bookstore-network

services:
  nginx:
    image: nginx:1.25.3-alpine
    restart: always
    hostname: nginx-srv
    env_file:
      - ./nginx/.env.nginx
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./ssl/:/etc/nginx/ssl/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - keycloak
      - postgres
      - adminer
    ports:
      - "443:443"
    networks:
      app:

  postgres:
    image: postgres:16.1
    restart: always
    hostname: postgres-srv
    env_file:
      - ./postgres/.env.postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    networks:
      app:

  adminer:
    image: adminer:latest
    restart: always
    hostname: adminer-srv
    environment:
      ADMINER_DEFAULT_SERVER: postgres-srv
    command:
      - "php"
      - "-S"
      - "[::]:9999"
      - "-t"
      - "/var/www/html"
    networks:
      app:

  pgamin:
    image: dpage/pgadmin4:8.1
    restart: always
    hostname: pgadmin-srv
    env_file:
      - ./pgadmin/.env.pgadmin
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      app:

  keycloak:
    image: keycloak/keycloak:23.0.3
    restart: always
    hostname: keycloak-srv
    depends_on:
      postgres:
        condition: service_completed_successfully
    env_file:
      - ./keycloak/.env.keycloak
    volumes:
      - keycloak:/opt/keycloak
      - ./ssl/:/etc/x509/https/
      - ./keycloak/realms.json:/opt/keycloak/data/import/realms.json
    command:
      - start
    networks:
      app:
