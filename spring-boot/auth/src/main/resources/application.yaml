debug: false

server:
  port: "${PORT:3000}"
  shutdown: graceful
  servlet:
    context-path: ""
  #    context-path: "/auth"
  error:
    include-stacktrace: never
    include-message: never
    include-exception: false
    include-binding-errors: never

spring:
  profiles:
    active: "${SPRING_PROFILES_ACTIVE}"
  application:
    name: "${APP_NAME}"
  info:
    build:
      version: "${APP_VERSION}"
      description: "${APP_DESCRIPTION}"
  main:
    banner-mode: off
  lifecycle:
    timeout-per-shutdown-phase: "${TIMEOUT_LIFECYCLE}"
  datasource:
    url: "jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}"
    name: "${DATABASE_NAME}"
    username: "${DATABASE_USERNAME}"
    password: "${DATABASE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
  security:
    tokens:
      jwt:
        exp: 3600 # 3600s = 1h
    files:
      path: "${ASYMMETRIC_KEY_PATH}"
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgresPlusDialect
  mvc:
    static-path-pattern: "/static/**"
    converters:
      preferred-json-mapper: jackson
    pathmatch:
      matching-strategy: ant_path_matcher
  devtools:
    livereload:
      enabled: false
  flyway:
    enabled: "${FLYWAY_ENABLED:false}"
    user: "${DATABASE_USERNAME}"
    password: "${DATABASE_PASSWORD}"
    url: "jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}"
    table: "migrations"
    driver-class-name: "org.postgresql.Driver"
    sql-migration-separator: "-"
    sql-migration-prefix: "0"
    validate-on-migrate: true
    fail-on-missing-locations: true
    encoding: UTF-8
    locations: "classpath:migrations/prod"
    connect-retries: 3
    connect-retries-interval: "30s"

springdoc:
  swagger-ui:
    enabled: true
    url: "/static/swagger/v1.yaml"
#    path: "${SWAGGER_DOC_PATH}"
    disable-swagger-default-url: true
    path: "/swagger-ui.html"
  api-docs:
    enabled: false
  show-actuator: true
#  use-management-port: true

#management:
#  server:
#    port: 4000

logging:
  file:
    name: "${LOG_DIR}/${LOG_FILE_NAME}.log"
    path: "${LOG_DIR}"
  logback:
    rollingpolicy:
      clean-history-on-start: false
      max-file-size: "${LOG_FILE_MAX_MB}"
      max-history: "${LOG_FILE_MAX_HISTORY}"
      total-size-cap: "${LOG_TOTAL_SIZE_CAP}"
